syntax = "proto3";

package raft;

service RaftActions {
  rpc Info (Empty) returns (InfoResponse) {}
  rpc ClientWrite (ClientWriteRequest) returns (ClientWriteResponse) {}
  rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse) {}
  rpc InstallSnapshot (InstallSnapshotRequest) returns (InstallSnapshotResponse) {}
  rpc Vote (VoteRequest) returns (VoteResponse) {}
}

message Empty {}

message LogId {
  uint64 term = 1;
  uint64 index = 2;
}

message Membership {
  repeated MembershipConfig configs = 1;
  MembershipConfig nodes = 2;
}

message SnapshotMeta {
  LogId last_log_id = 1;
  string snapshot_id = 2;
}

message MembershipConfig {
  repeated uint64 members = 1;
}

message InfoResponse {
  uint64 id = 1;
  string state = 2;
  uint64 current_term = 3;
  uint64 last_log_index = 4;
  uint64 last_applied = 5;
  optional uint64 current_leader = 6;
  MembershipConfig membership_config = 7;
}

message ClientWriteRequest {
  uint64 client = 1;
  uint64 serial = 2;
  uint64 payload_type = 3;
  bytes payload_data = 4;
}

message ClientWriteResponse {
  LogId log_id = 1;
  bytes data = 2;
  Membership membership = 3;
}

message Entry {
  uint64 term = 1;
  uint64 index = 2;
  bytes payload = 3;
}

message AppendEntriesRequest {
  uint64 term = 1;
  uint64 leader_id = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated Entry entries = 5;
  LogId leader_commit = 6;
}

message AppendEntriesResponse {
  uint64 term = 1;
  LogId matched = 2;
  LogId conflict = 3;
}

message InstallSnapshotRequest {
  uint64 term = 1;
  uint64 leader_id = 2;
  SnapshotMeta meta = 3;
  uint64 offset = 4;
  bytes data = 5;
  bool done = 6;
}

message InstallSnapshotResponse {
  uint64 term = 1;
}

message VoteRequest {
  uint64 term = 1;
  uint64 candidate_id = 2;
  LogId last_log_id = 3;
}

message VoteResponse {
  uint64 term = 1;
  bool vote_granted = 2;
  LogId last_log_id = 3;
}